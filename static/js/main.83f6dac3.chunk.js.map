{"version":3,"sources":["Components/Navbar/index.js","Components/MoviesView/index.js","Components/PopularMovies/index.js","Components/TopRatedMovies/index.js","Components/UpcomingMovies/index.js","Components/MovieCastView/index.js","Components/MovieDetails/index.js","Components/SearchMovies/index.js","App.js","index.js"],"names":["Navbar","_useState","useState","_useState2","_slicedToArray","value","setValue","_jsxs","className","children","_jsx","Link","to","type","placeholder","onChange","event","target","concat","MoviesView","props","popularMovies","id","originalTitle","popularity","posterPath","title","voteAverage","src","alt","PopularMovies","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","popularMoviesList","getPopularMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","url","response","data","movieResult","moviesResulsModified","wrap","_context","prev","next","method","fetch","sent","json","results","map","i","adult","backdropPath","backdrop_path","genreIds","genre_ids","originalLanguage","original_language","original_title","overview","poster_path","releaseDate","release_date","video","vote_average","voteCount","vote_count","setState","stop","renderPopularMoviesView","renderMainPopularPage","_createClass","key","this","Component","TopRatedMovies","topRatedMoviesList","renderTopRatedMoviesView","renderMainTopRatedPage","UpcomingMovies","UpcomingMoviesMoviesList","renderUpcomingMoviesView","renderMainUpcomingPage","MovieCastView","castDetailsList","name","originalName","profilePath","character","MovieDetails","movieSingleDetails","getMovieDetails","apiKey","match","params","castUrl","castResponse","castData","castDetails","updatedCastDetails","details","cast","console","log","original_name","profile_path","moviePoster","movieRating","movieGenre","genres","movieReleaseDate","movieOverView","renderMoviesSingleDetails","isArray","genre","renderCastDetials","renderMoviesDetails","SearchMovie","searchMovieList","getSearchDetails","query","searchUrl","resultData","updatedData","searchQuery","renderSearchMovie","renderSearchMoviesPage","prevProps","withRouter","App","Switch","Route","exact","path","component","ReactDOM","render","React","StrictMode","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.83f6dac3.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\nimport {useState} from 'react'\n\nimport './index.css'\n\nconst Navbar = () => {\n  const [value, setValue] = useState('')\n\n  const getValue = event => {\n    setValue(event.target.value)\n  }\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"nav-heading-btns\">\n        <h1 className=\"nav-heading\">movieDB</h1>\n        <div className=\"nav-btns-container\">\n          <Link className=\"link\" to=\"/\">\n            <button className=\"nav-btn\">Popular</button>\n          </Link>\n          <Link className=\"link\" to=\"/top-rated\">\n            <button className=\"nav-btn\">Top Rated</button>\n          </Link>\n          <Link className=\"link\" to=\"/upcoming\">\n            <button className=\"nav-btn\">Upcoming</button>\n          </Link>\n        </div>\n      </div>\n      <input\n        type=\"text\"\n        className=\"nav-search-container\"\n        placeholder=\"Enter Movie Name...\"\n        onChange={getValue}\n      />\n      <br />\n      {!value ? (\n        <button className=\"nav-btn\">Search</button>\n      ) : (\n        <Link className=\"link\" to={`/search/${value}`}>\n          <button className=\"nav-btn\">Search</button>\n        </Link>\n      )}\n    </div>\n  )\n}\n\nexport default Navbar\n","import {Link} from 'react-router-dom'\n\nimport './index.css'\n\nconst MoviesView = props => {\n  const {popularMovies} = props\n  const {\n    id,\n    originalTitle,\n \n    popularity,\n    posterPath,\n  \n    title,\n    voteAverage,\n  } = popularMovies\n\n  return (\n    <li className=\"popular-movies-view-container\">\n      <img\n        src={`https://image.tmdb.org/t/p/w500${posterPath}`}\n        alt={originalTitle}\n        className=\"popular-movies-poster\"\n      />\n      <h1 className=\"popular-movies-view-heading\">{title}</h1>\n      <p className=\"popular-movies-view-rating\">\n        Rating : <span className=\"spanner\">{popularity}</span>\n      </p>\n      <p className=\"popular-movies-view-rating\">{voteAverage}</p>\n      <Link to={`/movies/${id}`}>\n        <button className=\"pmovies-button\">View Details</button>{' '}\n      </Link>\n    </li>\n  )\n}\n\n/*   <Link to = {`/movies/${id}`}>  </Link> */\n\nexport default MoviesView\n","import {Component} from 'react'\n\nimport Navbar from '../Navbar'\nimport MoviesView from '../MoviesView'\n\nimport './index.css'\n\nclass PopularMovies extends Component {\n  state = {popularMoviesList: []}\n\n  componentDidMount() {\n    this.getPopularMovies()\n  }\n\n  getPopularMovies = async () => {\n    const apiKey = '4362c27df08506ae74bed5c135f05eb9'\n    const options = {\n      method: 'GET',\n    }\n    const url = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const movieResult = data.results\n\n    const moviesResulsModified = movieResult.map(i => ({\n      adult: i.adult,\n      backdropPath: i.backdrop_path,\n      genreIds: i.genre_ids,\n      id: i.id,\n      originalLanguage: i.original_language,\n      originalTitle: i.original_title,\n      overview: i.overview,\n      popularity: i.popularity,\n      posterPath: i.poster_path,\n      releaseDate: i.release_date,\n      title: i.title,\n      video: i.video,\n      voteAverage: i.vote_average,\n      voteCount: i.vote_count,\n    }))\n\n    this.setState({popularMoviesList: moviesResulsModified})\n  }\n\n  renderPopularMoviesView = () => {\n    const {popularMoviesList} = this.state\n    return (\n      <ul className=\"popularMovies-list-container\">\n        {popularMoviesList.map(i => (\n          <MoviesView key={i.id} popularMovies={i} />\n        ))}\n      </ul>\n    )\n  }\n\n  renderMainPopularPage = () => (\n    <div>\n      <Navbar />\n    </div>\n  )\n\n  render() {\n    return (\n      <div>\n        {this.renderMainPopularPage()}\n        <div className=\"popular-movies-main-container\">\n          {this.renderPopularMoviesView()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PopularMovies\n","import {Component} from 'react'\n\nimport Navbar from '../Navbar'\nimport MoviesView from '../MoviesView'\n\nimport './index.css'\n\nclass TopRatedMovies extends Component {\n  state = {topRatedMoviesList: []}\n\n  componentDidMount() {\n    this.getPopularMovies()\n  }\n\n  getPopularMovies = async () => {\n    const apiKey = '4362c27df08506ae74bed5c135f05eb9'\n    const options = {\n      method: 'GET',\n    }\n    const url = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=1`\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const movieResult = data.results\n\n    const moviesResulsModified = movieResult.map(i => ({\n      adult: i.adult,\n      backdropPath: i.backdrop_path,\n      genreIds: i.genre_ids,\n      id: i.id,\n      originalLanguage: i.original_language,\n      originalTitle: i.original_title,\n      overview: i.overview,\n      popularity: i.popularity,\n      posterPath: i.poster_path,\n      releaseDate: i.release_date,\n      title: i.title,\n      video: i.video,\n      voteAverage: i.vote_average,\n      voteCount: i.vote_count,\n    }))\n\n    this.setState({topRatedMoviesList: moviesResulsModified})\n  }\n\n  renderTopRatedMoviesView = () => {\n    const {topRatedMoviesList} = this.state\n    return (\n      <ul className=\"topRatedMovies-list-container\">\n        {topRatedMoviesList.map(i => (\n          <MoviesView key={i.id} popularMovies={i} />\n        ))}\n      </ul>\n    )\n  }\n\n  renderMainTopRatedPage = () => (\n    <div>\n      <Navbar />\n    </div>\n  )\n\n  render() {\n    return (\n      <div>\n        {this.renderMainTopRatedPage()}\n        <div className=\"topRated-movies-main-container\">\n          {this.renderTopRatedMoviesView()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TopRatedMovies\n","import {Component} from 'react'\n\nimport Navbar from '../Navbar'\nimport MoviesView from '../MoviesView'\n\nimport './index.css'\n\nclass UpcomingMovies extends Component {\n  state = {UpcomingMoviesMoviesList: []}\n\n  componentDidMount() {\n    this.getPopularMovies()\n  }\n\n  getPopularMovies = async () => {\n    const apiKey = '4362c27df08506ae74bed5c135f05eb9'\n    const options = {\n      method: 'GET',\n    }\n    const url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`\n\n    const response = await fetch(url, options)\n    const data = await response.json()\n    const movieResult = data.results\n\n    const moviesResulsModified = movieResult.map(i => ({\n      adult: i.adult,\n      backdropPath: i.backdrop_path,\n      genreIds: i.genre_ids,\n      id: i.id,\n      originalLanguage: i.original_language,\n      originalTitle: i.original_title,\n      overview: i.overview,\n      popularity: i.popularity,\n      posterPath: i.poster_path,\n      releaseDate: i.release_date,\n      title: i.title,\n      video: i.video,\n      voteAverage: i.vote_average,\n      voteCount: i.vote_count,\n    }))\n\n    this.setState({UpcomingMoviesMoviesList: moviesResulsModified})\n  }\n\n  renderUpcomingMoviesView = () => {\n    const {UpcomingMoviesMoviesList} = this.state\n    return (\n      <ul className=\"upcomingMovies-list-container\">\n        {UpcomingMoviesMoviesList.map(i => (\n          <MoviesView key={i.id} popularMovies={i} />\n        ))}\n      </ul>\n    )\n  }\n\n  renderMainUpcomingPage = () => (\n    <div>\n      <Navbar />\n    </div>\n  )\n\n  render() {\n    return (\n      <div>\n        {this.renderMainUpcomingPage()}\n        <div className=\"upcoming-movies-main-container\">\n          {this.renderUpcomingMoviesView()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default UpcomingMovies\n","import './index.css'\n\nconst MovieCastView = props => {\n  const {castDetailsList} = props\n  const {name, originalName, profilePath, character} = castDetailsList\n  return (\n    <li className=\"cast-list-container\">\n      <img\n        src={`https://image.tmdb.org/t/p/w500${profilePath}`}\n        alt={name}\n        className=\"character-img\"\n      />\n      <div className=\"cast-para-container\">\n        <p className=\"og-name\">{originalName}</p>\n        <p className=\"char-name\">{character}</p>\n      </div>\n    </li>\n  )\n}\n\nexport default MovieCastView\n","import {Component} from 'react'\n\nimport Navbar from '../Navbar'\nimport MovieCastView from '../MovieCastView/index'\n\nimport './index.css'\n\nclass MovieDetails extends Component {\n  state = {movieSingleDetails: [], castDetailsList: []}\n\n  componentDidMount() {\n    this.getMovieDetails()\n  }\n\n  getMovieDetails = async () => {\n    const apiKey = '4362c27df08506ae74bed5c135f05eb9'\n    const {match} = this.props\n\n    const {params} = match\n    const {id} = params\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n    const castUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n\n    const castResponse = await fetch(castUrl, options)\n    const castData = await castResponse.json()\n\n    const castDetails = castData.cast\n    console.log(castDetails)\n\n    const updatedCastDetails = castDetails.map(i => ({\n      name: i.name,\n      originalName: i.original_name,\n      profilePath: i.profile_path,\n      id: i.id,\n      character: i.character,\n    }))\n\n    console.log(updatedCastDetails)\n\n    const details = {\n      title: data.original_title,\n      moviePoster: data.poster_path,\n      movieRating: data.popularity,\n      movieGenre: data.genres,\n      movieReleaseDate: data.release_date,\n      movieOverView: data.overview,\n      backdropPath: data.backdrop_path,\n    }\n\n    this.setState({\n      movieSingleDetails: details,\n      castDetailsList: updatedCastDetails,\n    })\n  }\n\n  renderMoviesSingleDetails = () => {\n    const {movieSingleDetails} = this.state\n\n    const {\n      title,\n      moviePoster,\n      movieRating,\n      movieGenre,\n      movieReleaseDate,\n      movieOverView,\n    } = movieSingleDetails\n\n    return (\n      <div className=\"movies-single-render-container\">\n        <img\n          src={`https://image.tmdb.org/t/p/w500${moviePoster}`}\n          alt={title}\n        />\n        <div className=\"text-movies-container\">\n          <h1 className=\"movies-page-title\">{title}</h1>\n          <p>{movieReleaseDate}</p>\n\n          {movieGenre && Array.isArray(movieGenre) && (\n            <div className=\"genres-container\">\n              {movieGenre.map(genre => (\n                <p key={genre.id} className=\"genre-item\">\n                  {genre.name}\n                </p>\n              ))}\n            </div>\n          )}\n          <p>Rating: {movieRating}</p>\n          <h2>Overview</h2>\n          <p>{movieOverView}</p>\n        </div>\n      </div>\n    )\n  }\n\n  renderCastDetials = () => {\n    const {castDetailsList} = this.state\n    return (\n      <div className=\"cast-deatils-container\">\n        <h1 className=\"cast-details-heading\">Movie Cast</h1>\n        <ul className=\"cast-details-list-container\">\n          {castDetailsList.map(i => (\n            <MovieCastView key={i.id} castDetailsList={i} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderMoviesDetails = () => (\n    <div className=\"movies-details-main-container\">\n      <Navbar />\n      <div>\n        {this.renderMoviesSingleDetails()}\n        {this.renderCastDetials()}\n      </div>\n    </div>\n  )\n\n  render() {\n    return this.renderMoviesDetails()\n  }\n}\n\nexport default MovieDetails\n","import {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\n\nimport Navbar from '../Navbar'\nimport MoviesView from '../MoviesView'\n\nimport './index.css'\n\nclass SearchMovie extends Component {\n  state = {searchMovieList: []}\n\n  componentDidMount() {\n    this.getSearchDetails()\n  }\n\n  componentDidUpdate(prevProps) {\n    const {match} = this.props\n    const {match: prevMatch} = prevProps\n    if (prevMatch.params.query !== match.params.query) {\n      this.getSearchDetails()\n    }\n  }\n\n  getSearchDetails = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {query} = params\n    console.log(query)\n\n    const apiKey = '4362c27df08506ae74bed5c135f05eb9'\n    const searchUrl = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1`\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(searchUrl, options)\n    const data = await response.json()\n\n    const resultData = data.results\n\n    const updatedData = resultData.map(i => ({\n      adult: i.adult,\n      backdropPath: i.backdrop_path,\n      genreIds: i.genre_ids,\n      id: i.id,\n      originalLanguage: i.original_language,\n      originalTitle: i.original_title,\n      overview: i.overview,\n      popularity: i.popularity,\n      posterPath: i.poster_path,\n      releaseDate: i.release_date,\n      title: i.title,\n      video: i.video,\n      voteAverage: i.vote_average,\n      voteCount: i.vote_count,\n    }))\n    console.log(updatedData)\n    this.setState({searchMovieList: updatedData, searchQuery: ''})\n  }\n\n  renderSearchMovie = () => {\n    const {searchMovieList} = this.state\n    return (\n      <ul className=\"searchMovies-list-container\">\n        {searchMovieList.map(i => (\n          <MoviesView key={i.id} popularMovies={i} />\n        ))}\n      </ul>\n    )\n  }\n\n  renderSearchMoviesPage = () => (\n    <div>\n      <Navbar />\n      <div className=\"searchMovies-main-container\">\n        {this.renderSearchMovie()}\n      </div>\n    </div>\n  )\n\n  render() {\n    return this.renderSearchMoviesPage()\n  }\n}\n\nexport default withRouter(SearchMovie)\n","import {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nimport PopularMovies from './Components/PopularMovies/index'\nimport TopRatedMovies from './Components/TopRatedMovies/index'\nimport UpcomingMovies from './Components/UpcomingMovies/index'\nimport MovieDetails from './Components/MovieDetails/index'\nimport SearchMovie from './Components/SearchMovies/index'\n\nimport './App.css'\n\nconst App = () => (\n  <div>\n    <Switch>\n      <Route exact path=\"/\" component={PopularMovies} />\n      <Route exact path=\"/top-rated\" component={TopRatedMovies} />\n      <Route exact path=\"/upcoming\" component={UpcomingMovies} />\n      <Route exact path=\"/movies/:id\" component={MovieDetails} />\n      <Route exact path=\"/search/:query\" component={SearchMovie} />\n    </Switch>\n  </div>\n)\n\nexport default App\n","import {HashRouter} from 'react-router-dom' // BrowserRouter badulu HashRouter\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}